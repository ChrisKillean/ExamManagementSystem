# Generated by Django 2.2.4 on 2019-09-04 02:35

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('details', '0001_initial'),
        ('teams', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExamPaper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paper_creation_stage', models.CharField(choices=[('INITIAL_DRAFT', 'Initial Draft'), ('INTERNAL_REVIEW', 'Internal Review'), ('INTERNAL_REVIEW_COMPLETE', 'Internal Review Complete'), ('VETTING_COMMITTEE', 'Vetting Committee'), ('VETTING_COMMITTEE_COMPLETE', 'Vetting Committee Review Complete'), ('EXTERNAL_REVIEW', 'External Review'), ('EXTERNAL_REVIEW_COMPLETE', 'External Review Complete'), ('PAPER_FINALISED', 'Paper Finalised'), ('EXAM_REPORT', 'Exam Marker Report Submitted'), ('REPORTS_COMPLETED', 'Exam Review Complete')], default='INITIAL_DRAFT', max_length=30)),
                ('requires_resit_paper', models.BooleanField(default=False)),
                ('main_exam', models.BooleanField(default=True)),
                ('submission_initial_draft', models.DateField(null=True)),
                ('submission_internal_review_response', models.DateField(null=True)),
                ('submission_internal_review_amendments', models.DateField(null=True)),
                ('submission_vetting_committee_response', models.DateField(null=True)),
                ('submission_vetting_committee_amendments', models.DateField(null=True)),
                ('submission_external_review_response', models.DateField(null=True)),
                ('submission_school_office', models.DateField(null=True)),
                ('submission_exam_marker_report', models.DateField(null=True)),
                ('submission_moderator_report', models.DateField(null=True)),
                ('active', models.BooleanField(default=True)),
                ('exam_paper_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='exam_type_set', to='details.ExamType')),
                ('module_exam', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='exam_module_set', to='details.ModuleDetail')),
                ('paper_review_deadlines', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='paper_deadlines_set', to='details.SubmissionDeadlines')),
                ('paper_team', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='paper_team_set', to='teams.Team')),
            ],
        ),
        migrations.CreateModel(
            name='ExamVettingCommittee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vetting_committee_feedback', models.TextField(max_length=1500)),
                ('exam_setter_response', models.TextField(max_length=1000)),
                ('exam_paper', models.FileField(upload_to='exam_paper/vetting/exam_paper')),
                ('marking_scheme', models.FileField(upload_to='exam_paper/vetting/marking_scheme')),
                ('related_exam_paper', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='exam_paper.ExamPaper')),
            ],
        ),
        migrations.CreateModel(
            name='ExamModuleModeratorReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_addition_and_total_marks', models.TextField(max_length=1000)),
                ('moderation_process', models.TextField(max_length=1000)),
                ('significant_outcomes', models.TextField(max_length=1000)),
                ('exam_paper_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='exam_paper_type_set', to='details.ExamType')),
                ('module_code_and_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='module_exam_set', to='details.ModuleDetail')),
                ('module_coordinator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='module_coordinator_set', to=settings.AUTH_USER_MODEL)),
                ('module_moderator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='module_moderator_set', to=settings.AUTH_USER_MODEL)),
                ('related_exam_paper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exam_paper.ExamPaper')),
            ],
        ),
        migrations.CreateModel(
            name='ExamMarkerReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quality_answers', models.TextField(max_length=1000)),
                ('areas_answered_well', models.TextField(max_length=1000)),
                ('areas_answered_poorly', models.TextField(max_length=1000)),
                ('difficulties_wording_paper', models.TextField(max_length=1000)),
                ('difficulties_marking_scheme', models.TextField(max_length=1000)),
                ('candidate_literacy_numeracy', models.TextField(max_length=1000)),
                ('additional_comments', models.TextField(blank=True, max_length=1000)),
                ('module_code_and_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='module_code_and_name_set', to='details.ModuleDetail')),
                ('related_exam_paper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exam_paper.ExamPaper')),
                ('report_completed_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='report_completed_by_set', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExamInternalReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internal_reviewer_feedback', models.TextField(max_length=1500)),
                ('exam_setter_response', models.TextField(max_length=1000)),
                ('exam_paper', models.FileField(upload_to='exam_paper/internal_review/exam_paper')),
                ('marking_scheme', models.FileField(upload_to='exam_paper/internal_review/marking_scheme')),
                ('related_exam_paper', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='exam_paper.ExamPaper')),
            ],
        ),
        migrations.CreateModel(
            name='ExamInitialDraft',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial_draft_comments', models.TextField(max_length=1500, validators=[django.core.validators.MinLengthValidator(5)])),
                ('exam_paper', models.FileField(upload_to='exam_paper/initial_draft/exam_paper')),
                ('marking_scheme', models.FileField(upload_to='exam_paper/initial_draft/marking_scheme')),
                ('related_exam_paper', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='exam_paper.ExamPaper')),
            ],
        ),
        migrations.CreateModel(
            name='ExamExternalReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_examiner_feedback', models.TextField(max_length=1500)),
                ('exam_setter_response', models.TextField(max_length=1000)),
                ('exam_paper', models.FileField(upload_to='exam_paper/external/exam_paper')),
                ('marking_scheme', models.FileField(upload_to='exam_paper/external/marking_scheme')),
                ('related_exam_paper', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='exam_paper.ExamPaper')),
            ],
        ),
    ]
